/*******************************************************************************
 * Copyright (c) 2012 IBM Corporation and others.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * and Eclipse Distribution License v. 1.0 which accompanies this distribution.
 *  
 * The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html
 * and the Eclipse Distribution License is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * Contributors:
 *
 *     Russell Boykin       - initial API and implementation
 *     Alberto Giammaria    - initial API and implementation
 *     Chris Peters         - initial API and implementation
 *     Gianluca Bernardini  - initial API and implementation
 *	   Sam Padgett	       - initial API and implementation
 *     Michael Fiedler     - adapted for OSLC4J
 *     Jad El-khoury        - initial implementation of code generator (https://bugs.eclipse.org/bugs/show_bug.cgi?id=422448)
 *
 * This file is generated by org.eclipse.lyo.oslc4j.codegenerator
 *******************************************************************************/


package com.ericsson.eif.tfs.oslc.resources;

import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;
import java.util.Iterator;
import javax.servlet.http.HttpServletRequest;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;

import org.eclipse.lyo.oslc4j.core.annotation.OslcAllowedValue;
import org.eclipse.lyo.oslc4j.core.annotation.OslcDescription;
import org.eclipse.lyo.oslc4j.core.annotation.OslcName;
import org.eclipse.lyo.oslc4j.core.annotation.OslcNamespace;
import org.eclipse.lyo.oslc4j.core.annotation.OslcOccurs;
import org.eclipse.lyo.oslc4j.core.annotation.OslcPropertyDefinition;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRange;
import org.eclipse.lyo.oslc4j.core.annotation.OslcReadOnly;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRepresentation;
import org.eclipse.lyo.oslc4j.core.annotation.OslcResourceShape;
import org.eclipse.lyo.oslc4j.core.annotation.OslcTitle;
import org.eclipse.lyo.oslc4j.core.annotation.OslcValueType;
import org.eclipse.lyo.oslc4j.core.model.AbstractResource;
import org.eclipse.lyo.oslc4j.core.model.Link;
import org.eclipse.lyo.oslc4j.core.model.Occurs;
import org.eclipse.lyo.oslc4j.core.model.OslcConstants;
import org.eclipse.lyo.oslc4j.core.model.Representation;
import org.eclipse.lyo.oslc4j.core.model.ValueType;

import com.ericsson.eif.tfs.oslc.servlet.ServletListener; 
import com.ericsson.eif.tfs.oslc.TFSAdapterConstants;
import com.ericsson.eif.tfs.oslc.resources.Person;	
import com.ericsson.eif.tfs.oslc.resources.Person;	
import com.ericsson.eif.tfs.oslc.resources.Type;	

// Start of user code imports
import com.microsoft.tfs.core.clients.workitem.WorkItem;
// End of user code

//@OslcNamespace(TFSAdapterConstants.TFSBUG_NAMSPACE)
//@OslcName(TFSAdapterConstants.TFSCHANGEREQUEST) 
//@OslcResourceShape(title = "TFSChangeRequest Resource Shape", describes = TFSAdapterConstants.TYPE_TFSCHANGEREQUEST)

@OslcNamespace(TFSAdapterConstants.CHANGE_MANAGEMENT_NAMSPACE)
@OslcName(TFSAdapterConstants.CHANGEREQUEST) 
@OslcResourceShape(title = "ChangeRequest Resource Shape", describes = TFSAdapterConstants.TYPE_CHANGEREQUEST)
public class TFSChangeRequest
       extends ChangeRequest
       
{

private String team;  

public TFSChangeRequest()
       throws URISyntaxException
{
    super();

	// Start of user code constructor1
	// End of user code
}

public TFSChangeRequest(final URI about)
       throws URISyntaxException
{
    super(about);

	// Start of user code constructor2
	// End of user code
}

public static URI constructURI(String serviceProviderId, String tFSChangeRequestId) throws URISyntaxException, UnsupportedEncodingException
{
	return new URI(ServletListener.getServicesBase() + "/" + serviceProviderId + "/tFSChangeRequests/"+ tFSChangeRequestId);
}

public String toString()
{
		String result = "";
		// Start of user code toString_init
		// End of user code

		result = getAbout().toString();

		// Start of user code toString_finalize
		// End of user code

		return result;
}

public String toHtml()
{
		String result = "";
		// Start of user code toHtml_init
		// End of user code

		result = "<a href=\"" + getAbout() + "\">" + toString() + "</a>";

		// Start of user code toHtml_finalize
		// End of user code

		return result;
}

   	@OslcName("team")
   	@OslcPropertyDefinition(TFSAdapterConstants.TFSBUG_NAMSPACE + "team")
	@OslcOccurs(Occurs.ExactlyOne)
	@OslcValueType(ValueType.String)
	@OslcReadOnly(false)
    public String getTeam()
    {
        return team;
    }

    public void setTeam(final String team )
    {
        this.team = team;
    }

    static public String teamToHtmlForCreation (final HttpServletRequest httpServletRequest, final String serviceProviderId)
    {
		String s = "";

		// Start of user code teamasHtmlForCreation_init
		// End of user code

		s = s + "<label for=\"team\">team: </LABEL>";

		// Start of user code teamasHtmlForCreation_mid
		// End of user code

				s= s + "<input name=\"team\" type=\"text\" style=\"width: 400px\" id=\"team\" >";

		// Start of user code teamasHtmlForCreation_finalize
		// End of user code

		return s; 
    }

    public String teamToHtml()
    {
		String s = "";

		// Start of user code teamtoHtml_init
		// End of user code

		s = s + "<label for=\"team\"><strong>team</strong>: </LABEL>";

		// Start of user code teamtoHtml_mid
		// End of user code

		try {
				if (team == null) {
					s= s + "<em>null</em>";				
				}
				else {
					s= s + team.toString();				
				}
	    } catch (Exception e) {
	        e.printStackTrace();
	    }

		// Start of user code teamtoHtml_finalize
		// End of user code

		return s; 
    }

    // Start of user code block
    //TODO/FA: Should be within a generator "user code" block
    public static TFSChangeRequest fromWorkItem(WorkItem workItem) {
        TFSChangeRequest tfsCr = null;
        try {
            tfsCr = new TFSChangeRequest();
            tfsCr.setTitle(workItem.getTitle());
            tfsCr.setTeam("Fix this team"); 
            //tfsCr.setIssue("Dummy issue"); //TODO/FA: FIX
            //TODO/FA: Additional mapping of properties:
            //tfsCr.a = workItem.getSomeField();
            //tfsCr.b = workItem...
        } catch (URISyntaxException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        return tfsCr;
    }
    // End of user code

}

